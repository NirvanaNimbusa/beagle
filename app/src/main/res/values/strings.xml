<resources>

    <!-- Main -->
    <string name="open_debug_menu">Open debug menu</string>
    <string name="back">Back</string>
    <string name="coming_soon">Coming soon…</string>

    <!-- Setup -->
    <string name="setup_title">Setup</string>
    <string name="setup_text_1"><b>Welcome!</b>\n\n
Beagle is a free, open-source library that adds a smart and easily customizable debug menu to the internal builds of your Android apps.</string>
    <string name="setup_github_button">Check it out on GitHub</string>
    <string name="setup_app_not_found">No application can handle this link</string>
    <string name="setup_text_2">The library offers five variants that display the debug menu in different ways. The first step to integrate it is selecting one that best fits your application\'s needs:</string>
    <string name="setup_variant_activity">Activity</string>
    <string name="setup_variant_bottom_sheet">Bottom sheet</string>
    <string name="setup_variant_dialog">Dialog</string>
    <string name="setup_variant_drawer">Drawer</string>
    <string name="setup_variant_view">View</string>
    <string name="setup_text_3">After adding the dependencies, the library can be initialized with a single line of code in the <b>onCreate()</b> method of your custom <b>Application</b> class:</string>
    <string name="setup_text_4"><b><i>In this demo you can trigger the debug menu at any time by shaking the device or by tapping on the Beagle logo in the bottom-right corner.</i></b></string>
    <string name="setup_text_5">The next step after initialization is configuring a list of modules. The simplest way to do that is to call:</string>
    <string name="setup_beagle_text_1"><b>This is the debug menu configured by you</b>\n\n
It should contain useful information, like the version number of the app, the build date, or information about the device it\'s running on.\n\n
You can use it to display network requests, track analytics events, see custom logs, session-related data or anything that you consider useful for debugging potential issues or simplifying the testing of your app.\n\n
It can also contain various dynamic features, like switches, radio groups, buttons, sliders, etc. that you can use to set up a \"God mode\" during development.</string>
    <string name="setup_beagle_label">For example:</string>
    <string name="setup_beagle_switch">Here is a switch. It does nothing.</string>
    <string name="setup_beagle_switch_toast_on">The switch is on. Nothing happened.</string>
    <string name="setup_beagle_switch_toast_off">The switch is off. Still nothing.</string>
    <string name="setup_beagle_button">This button also does nothing</string>
    <string name="setup_beagle_button_toast">Nothing, as promised</string>
    <string name="setup_beagle_check_box">This check box does nothing</string>
    <string name="setup_beagle_check_box_toast_on">Check box checked</string>
    <string name="setup_beagle_check_box_toast_off">Check box unchecked</string>
    <string name="setup_beagle_radio_group">This radio group does…</string>
    <string name="setup_beagle_radio_group_option_1">Nothing</string>
    <string name="setup_beagle_radio_group_option_2">Nada</string>
    <string name="setup_beagle_radio_group_option_3">Zilch</string>
    <string name="setup_beagle_text_2">Best of all: none of this will be present in your release builds, as the <b>noop</b> implementation that should be used in those situations has the same public API (so it won\'t break your code) but none of the underlying logic.\n\n
The module configuration can be changed at any time. For example in the case of this application you will see very different Beagle setups as you explore the various case studies.\n\n
The library was written in Kotlin and supports API levels 16 and above.</string>
    <string name="setup_beagle_tutorial_switch">Show detailed tutorial</string>

    <!-- Inspiration -->
    <string name="inspiration_title">Inspiration</string>
    <string name="inspiration_text_1">The module configuration very much depends on your application\'s specific needs, but the following example demonstrates some features that most developers will find useful:</string>
    <string name="inspiration_text_2">The true power of the library lies in modules that require a tiny bit of customization. Check out how Beagle can be useful in the following situations:</string>
    <string name="inspiration_beagle_text">Select one of the case studies to see the specialized version of the debug menu for the situation.</string>

    <!-- Case studies / Basic setup -->
    <string name="case_study_basic_setup_title">Basic setup</string>
    <string name="case_study_basic_setup_description">Built-in modules that can be added with almost no configuration and are useful for most projects.</string>
    <string name="case_study_basic_setup_text_1">The current module configuration is initialized using the following code snippet:</string>
    <string name="case_study_basic_setup_text_2">Let\'s see what each individual module does.</string>
    <string name="case_study_basic_setup_text_3"><b>Header</b>\n\nAll this module does is apply a specific formatting to three pieces of text. The variables for this configuration are defined the following way:</string>
    <string name="case_study_basic_setup_text_4">The last line uses a custom build config field:</string>
    <string name="case_study_basic_setup_text_5"><b>AppInfoButton</b>\n\n
A simple shortcut to the system settings page of your app. Can be useful if you need quick access to clearing the storage, for example.</string>
    <string name="case_study_basic_setup_text_6"><b>AnimationDurationSwitch</b>\n\n
A frequent use case for this toggle is debugging animation / transition glitches. Check out how it affects this loading indicator:</string>
    <string name="case_study_basic_setup_text_7"><b>DeviceInfo</b>\n\n
Displays important information about the device such as the Android SDK version or the screen resolution that can be helpful in identifying potential device-specific issues.</string>

    <!-- Case studies / Authentication -->
    <string name="case_study_authentication_title">Authentication</string>
    <string name="case_study_authentication_description">Simplify the QA process by presenting a list of test accounts and automatically filling in the necessary login information.</string>
    <string name="case_study_authentication_text_1">Manually typing in the same credentials multiple times a day can be a huge waste of time.</string>
    <string name="case_study_authentication_email">Email address</string>
    <string name="case_study_authentication_password">Password</string>
    <string name="case_study_authentication_sign_in_button">Sign in</string>
    <string name="case_study_authentication_signing_in">Signing in!</string>
    <string name="case_study_authentication_text_2">To define a module that helps in this situation, first we need to create a representation of a test account:</string>
    <string name="case_study_authentication_text_3">Extending <b>BeagleListItemContract</b> is a must as it provides information to the library about a unique identifier for the model (in this case the email address is good enough) and the actual text that is displayed on the UI.\n\n
The next step is creating the module:</string>
    <string name="case_study_authentication_text_4">To simplify the flow further, in the callback lambda we\'re hiding the debug menu and automatically starting the sign in flow.\n\n
Another idea to save time is to automatically display the debug menu when the screen is opened, simply by calling:</string>
    <string name="case_study_authentication_text_5">You can test this implementation by toggling the \"Show automatically\" switch and re-opening this screen.</string>
    <string name="case_study_authentication_show_automatically_switch">Show automatically</string>
    <string name="case_study_authentication_test_accounts">Test accounts</string>

    <!-- Case studies / Feature toggles -->
    <string name="case_study_feature_toggles_title">Feature toggles</string>
    <string name="case_study_feature_toggles_description">Test different implementations without creating new builds. Persist these feature flags across app launches with a single extra line of code!</string>
    <string name="case_study_feature_toggles_text_1">Work in progress…</string>

    <!-- Case studies / Analytics -->
    <string name="case_study_analytics_title">Logging analytics events</string>
    <string name="case_study_analytics_description">Making sure that every required event is tracked from an admin panel can be cumbersome. Why not display the events right in the app, in real time?</string>

    <!-- Case studies / Network request interceptor -->
    <string name="case_study_network_request_interceptor_title">Intercepting network requests</string>
    <string name="case_study_network_request_interceptor_description">See the incoming and outgoing REST API calls and their formatted JSON payload to quickly debug potential issues.</string>

    <!-- Case studies / Environment switcher -->
    <string name="case_study_environment_switcher_title">Environment switcher</string>
    <string name="case_study_environment_switcher_description">Change the application\'s base URL at runtime.</string>

    <!-- Case studies / Mock data generator -->
    <string name="case_study_mock_data_generator_title">Mock data generator</string>
    <string name="case_study_mock_data_generator_description">Filling your development database with random content like \"d23fMIMnow81\" makes your app look bad. Why not add a simple Lorem Ipsum generator instead?</string>

    <!-- Case studies / Bug reporting tool -->
    <string name="case_study_bug_reporting_tool_title">Bug reporting tool</string>
    <string name="case_study_bug_reporting_tool_description">Fetch Beagle, take a screenshot, draw on it, provide additional details and send them together with configurable build and device information to an email address or create a Jira ticket directly.</string>

    <!-- Playground -->
    <string name="playground_title">Playground</string>
    <string name="playground_description">This page will contain a drag-and-drop editor that can be used to easily configure and preview Beagle modules. It will also generate the code for the configuration.\n\nThe default list of modules should also be an example that is usable for most apps.</string>

    <!-- About -->
    <string name="about_title">About</string>
    <string name="about_description">This page will contain the link to the GitHub repository, the list of open-source licenses and maybe a Donate button.</string>

</resources>